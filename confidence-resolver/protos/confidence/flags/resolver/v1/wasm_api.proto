syntax = "proto3";

package confidence.flags.resolver.v1;

import "google/api/resource.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

import "confidence/api/annotations.proto";
import "confidence/flags/types/v1/types.proto";
import "confidence/flags/resolver/v1/types.proto";
import "confidence/flags/resolver/v1/api.proto";

option java_package = "com.spotify.confidence.flags.resolver.v1";
option java_multiple_files = true;
option java_outer_classname = "WasmApiProto";


message ResolveWithStickyRequest {
  ResolveFlagsRequest resolve_request = 1;

  // Context about the materialization required for the resolve
  map<string, MaterializationMap> materializations_per_unit = 2;

  // if a materialization info is missing, we want tor return to the caller immediately
  bool fail_fast_on_sticky = 3;
  // if we should support sticky or completely skip the flag if they had sticky rules
  bool not_process_sticky = 4;
}

message MaterializationMap {
  // materialization name to info
  map<string, MaterializationInfo> info_map = 1;
}

message MaterializationInfo {
  bool unit_in_info = 1;
  map<string, string> rule_to_variant = 2;
}

message LogMessage {
 string message = 1;
}

message ResolveWithStickyResponse {
 oneof resolve_result {
 Success success = 1;
 MissingMaterializations missing_materializations = 2;
 }

 message Success {
  ResolveFlagsResponse response = 1;
  repeated MaterializationUpdate updates = 2;
 }

 message MissingMaterializations {
     repeated MissingMaterializationItem items = 1;
 }

 message MissingMaterializationItem {
     string unit = 1;
     string rule = 2;
     string read_materialization = 3;
 }

 message MaterializationUpdate {
      string unit = 1;
      string write_materialization = 2;
      string rule = 3;
      string variant = 4;
 }
}

